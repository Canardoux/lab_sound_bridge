name: CMake

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  # build-linux-amd64:
  #   runs-on: ubuntu-latest

  #   steps:
  #   - uses: actions/checkout@v2
  #     with:
  #       submodules: recursive
        
  #   - name: apt-get install libasound2-dev
  #     run: sudo apt-get install libasound2-dev -y

  #   - name: mkdir build
  #     run: mkdir build

  #   - name: Configure CMake
  #     run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DLABSOUND_ASOUND=1

  #   - name: Build
  #     run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

  #   - uses: actions/upload-artifact@v2
  #     with:
  #       name: linux-amd64
  #       path: ${{github.workspace}}/build/libLabSoundBridge.so

  # build-windows-amd64:
  #   runs-on: windows-latest

  #   steps:
  #   - uses: actions/checkout@v2
  #     with:
  #       submodules: recursive
    
  #   - name: mkdir build
  #     run: mkdir build

  #   - name: Configure CMake
  #     run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

  #   - name: Build
  #     run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

  #   - uses: actions/upload-artifact@v2
  #     with:
  #       name: windows-amd64
  #       path: ${{github.workspace}}/build/Release/LabSoundBridge.dll

  # android:
  #   runs-on: ubuntu-latest

  #   steps:
  #   - uses: actions/checkout@v2
  #     with:
  #       submodules: recursive

  #   - uses: nttld/setup-ndk@v1
  #     id: setup-ndk
  #     with:
  #       ndk-version: r21e
    
  #   - name: mkdir build
  #     run: mkdir build

  #   - name: Build armeabi-v7a
  #     run: cmake -B ${{github.workspace}}/build-$ANDROID_ABI -DANDROID_ABI=$ANDROID_ABI -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DANDROID_PLATFORM=android-16 -DANDROID_NDK=$ANDROID_NDK_HOME -DCMAKE_TOOLCHAIN_FILE=$ANDROID_NDK_HOME/build/cmake/android.toolchain.cmake -DANDROID_TOOLCHAIN=clang -DCMAKE_SYSTEM_NAME=Android -DCMAKE_LIBRARY_OUTPUT_DIRECTORY=${{github.workspace}}/lib/$ANDROID_ABI/ && cmake --build ${{github.workspace}}/build-$ANDROID_ABI --config ${{env.BUILD_TYPE}}
  #     env:
  #       ANDROID_NDK_HOME: ${{ steps.setup-ndk.outputs.ndk-path }}
  #       ANDROID_ABI: armeabi-v7a

  #   - name: Build arm64-v8a
  #     run: cmake -B ${{github.workspace}}/build-$ANDROID_ABI -DANDROID_ABI=$ANDROID_ABI -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DANDROID_PLATFORM=android-16 -DANDROID_NDK=$ANDROID_NDK_HOME -DCMAKE_TOOLCHAIN_FILE=$ANDROID_NDK_HOME/build/cmake/android.toolchain.cmake -DANDROID_TOOLCHAIN=clang -DCMAKE_SYSTEM_NAME=Android -DCMAKE_LIBRARY_OUTPUT_DIRECTORY=${{github.workspace}}/lib/$ANDROID_ABI/ && cmake --build ${{github.workspace}}/build-$ANDROID_ABI --config ${{env.BUILD_TYPE}}
  #     env:
  #       ANDROID_NDK_HOME: ${{ steps.setup-ndk.outputs.ndk-path }}
  #       ANDROID_ABI: arm64-v8a

  #   - name: Build x86
  #     run: cmake -B ${{github.workspace}}/build-$ANDROID_ABI -DANDROID_ABI=$ANDROID_ABI -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DANDROID_PLATFORM=android-16 -DANDROID_NDK=$ANDROID_NDK_HOME -DCMAKE_TOOLCHAIN_FILE=$ANDROID_NDK_HOME/build/cmake/android.toolchain.cmake -DANDROID_TOOLCHAIN=clang -DCMAKE_SYSTEM_NAME=Android -DCMAKE_LIBRARY_OUTPUT_DIRECTORY=${{github.workspace}}/lib/$ANDROID_ABI/ && cmake --build ${{github.workspace}}/build-$ANDROID_ABI --config ${{env.BUILD_TYPE}}
  #     env:
  #       ANDROID_NDK_HOME: ${{ steps.setup-ndk.outputs.ndk-path }}
  #       ANDROID_ABI: x86

  #   - name: Build x86_64
  #     run: cmake -B ${{github.workspace}}/build-$ANDROID_ABI -DANDROID_ABI=$ANDROID_ABI -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DANDROID_PLATFORM=android-16 -DANDROID_NDK=$ANDROID_NDK_HOME -DCMAKE_TOOLCHAIN_FILE=$ANDROID_NDK_HOME/build/cmake/android.toolchain.cmake -DANDROID_TOOLCHAIN=clang -DCMAKE_SYSTEM_NAME=Android -DCMAKE_LIBRARY_OUTPUT_DIRECTORY=${{github.workspace}}/lib/$ANDROID_ABI/ && cmake --build ${{github.workspace}}/build-$ANDROID_ABI --config ${{env.BUILD_TYPE}}
  #     env:
  #       ANDROID_NDK_HOME: ${{ steps.setup-ndk.outputs.ndk-path }}
  #       ANDROID_ABI: x86_64

  #   - uses: actions/upload-artifact@v2
  #     with:
  #       name: android
  #       path: ${{github.workspace}}/lib

  build-macos-intel:
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
        
    - name: mkdir build
      run: mkdir build

    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - uses: actions/upload-artifact@v2
      with:
        name: macos-intel
        path: ${{github.workspace}}/build

